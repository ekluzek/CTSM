===============================================================
Tag name:  ctsm1.0.dev004
Originator(s):  erik (Erik Kluzek,UCAR/TSS,303-497-1326)
Date: Wed Jul 18 02:10:23 MDT 2018
One-line Summary: Add some new diagnostic fields, fix a few issues, update cmip6 output

Purpose of changes
------------------

Add some new diagnostic fields. Some needed for CMIP6. Update the CMIP6 user-mods output.
Fix a couple issues. Get full list of history tapes working correctly. Check for valid range
of CO2. New IC file interpolated from the previous one for f19_g17_gl4 for 2000 Clm50BgcCrop.


Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #): $210, #427, #429
   #210 -- increase number of history tapes
   $427 -- Check for zero CO2
   #429 -- New IC for present day

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations? No
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[ ] clm5_0

[ ] clm4_5

[ ] clm4_0

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): none

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables): New history fields
   TSKIN --- skin temperature
   TSL ----- temperature of near-surface soil layer
   GSSUNLN - sunlit leaf stomatal conductance at local noon
   GSSHALN - shaded leaf stomatal conductance at local noon

Changes made to namelist defaults (e.g., changed parameter values):  None

Changes to the datasets (e.g., parameter, surface or initial files): New finidat file f19_g17_gl4 2000 Clm50BgcCrop 
    New file is just interpolate from the previous file to a f19_g17_gl4 gridfor Clm50BgcCrop and 2000 simulation year

Substantial timing or memory changes: None

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in .CLMTrunkChecklist as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance):

Changes to tests or testing: None

Code reviewed by: self, oleson, abtawfik


CTSM testing: regular

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - OK (95 are different because of finidat file change)

  unit-tests (components/clm/src):

    cheyenne - PASS

  regular tests (aux_clm):

    cheyenne_intel ---- OK
    cheyenne_gnu ------ OK
    hobart_nag -------- PASS
    hobart_pgi -------- FAIL
    hobart_intel ------ PASS

CTSM tag used for the baseline comparisons:  ctsm1.0.dev003


Answer changes
--------------

Changes answers relative to baseline: Yes -- only 2000 cases because of new IC

  Summarize any changes to answers, i.e.,
    - what code configurations: Just 2000 cases
    - what platforms/compilers: All
    - nature of change: same climate

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): None

Pull Requests that document the changes (include PR ids):
(https://github.com/ESCOMP/ctsm/pull)


   #338 -- Radtemp and other new diagnostic fields

===============================================================
===============================================================
Tag name:  ctsm1.0.dev003
Originator(s):  erik (Erik Kluzek,UCAR/TSS,303-497-1326)
Date: Sun Jul 15 00:26:46 MDT 2018
One-line Summary: Update cime/cism to work on upgraded hobart and with glade changes on cheyenne

Purpose of changes
------------------

Update cime and cism so can work on upgraded hobart. Also fix an issue that the Nag6.2 compiler found
in CTSM. Also get working with glade changes that happened on cheyenne, DIN_LOC_ROOT_CLMFORC was
changed to a new directory.


Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #): [If none, remove this line]
   #441 -- Changes in glade invalidate previous softlinks and data locations
   #438 -- Illegal argument aliasing caught by nag6.2
   #433 -- with hobart upgrade CTSM not working

Known bugs introduced in this tag (include github issue ID):
   #444 -- PGI fails on cheyenne and hobart

Known bugs found since the previous tag (include github issue ID):
   #443 -- Wood C:N ratios
   #440 -- leafcn_max < target leafcn?

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations? No
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[ ] clm5_0

[ ] clm4_5

[ ] clm4_0

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): None

Changes to CLM's user interface (e.g., new/renamed XML or namelist variables): DIN_LOC_ROOT_CLMFORC on cheyenne
   DIN_LOC_ROOT_CLMFORC was change on cheyenne

Changes made to namelist defaults (e.g., changed parameter values): None

Changes to the datasets (e.g., parameter, surface or initial files): None

Substantial timing or memory changes: None

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in .CTSMTrunkChecklist as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): None

Changes to tests or testing: path for cheyenne specific test had to be changed
    Add some gnu tests on hobart
    Lengthen wallclock on a test
    Fix path for DA test_mod

Code reviewed by: self

CLM testing: regular

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - PASS

  unit-tests (components/clm/src):

    cheyenne - PASS

  tools-tests (components/clm/test/tools):

    cheyenne - PASS

  PTCLM testing (components/clm/tools/shared/PTCLM/test):

     cheyenne - OK

  regular tests (aux_clm):

    cheyenne_intel ---- OK
    cheyenne_gnu ------ OK
    hobart_nag -------- OK
    hobart_pgi -------- FAIL
    hobart_gnu -------- PASS
    hobart_intel ------ PASS

CLM tag used for the baseline comparisons:  ctsm1.0.dev002


Answer changes
--------------

Changes answers relative to baseline: No bit-for-bit

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): cime, cism
   cism-wrapper to release-cesm2.0.04
   cime         to cime5.6.10

Pull Requests that document the changes (include PR ids):
(https://github.com/ESCOMP/ctsm/pull)
 #444 -- Get working on upgraded hobart and with glade changes on cheyenne

===============================================================
===============================================================
Tag name:  ctsm1.0.dev002
Originator(s):  erik (Erik Kluzek)
Date: Fri Jul  6 16:33:03 MDT 2018
One-line Summary: Fix NFIX flux variables so special land-units are zeroed out, tools update, add some *_MAX fields on mksurfdata_map for transient cases

Purpose of changes
------------------

Nitrogen Fixation flux arrays were being set to missing value over non-vegetated landunits. This sets them to zero everywhere
and averages in the zero's at the gridcell level for history output. It also reads in restarts with missing values and converts
them to zero's.

There are also some tools updates, getting the tools working on the new upgraded hobart.cgd.ucar.edu.

And mksurfdata_map is updated to add some *_MAX files on the landuse.timeseries files that will allow us to conserve memory
for transient cases.


Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #): #435, #436, #433 (for tools)
    #435 -- intel build for tools
    #426 -- Nitrogen Fixation flux variables
    #433 -- hobart broken, got it working for tools

Known bugs found since the previous tag (include github issue ID): #433, #431

   #433 -- with hobart upgrade, hobart build isn't working
   #431 -- When set_* options are used to hist_addfld be careful of ordering

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[X] clm5_0

[ ] clm4_5

[ ] clm4_0

Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions): None

Changes to CLM's user interface (e.g., new/renamed XML or namelist variables): None

Changes made to namelist defaults (e.g., changed parameter values): ndep file updated for clm5_0 for 1850

Changes to the datasets (e.g., parameter, surface or initial files): None

Substantial timing or memory changes: None

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in .CLMTrunkChecklist as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance): NFIX flux variables
   NFIX flux variables when read from restart have special-values (missing on non veg landunits) converted to zero's
   They are now initialized to zero everywhere.

Changes to tests or testing: None

Code reviewed by: self, wwieder, and lawrence, sacks (mksurfdata_map code)

CLM testing: regular (although none on hobart!)

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - PASS (5 tests differ from previous version)

  unit-tests (components/clm/src):

    cheyenne - PASS

  tools-tests (components/clm/test/tools):

    cheyenne - PASS
    hobart --- PASS

  regular tests (aux_clm):

    cheyenne_intel ---- OK
    cheyenne_gnu ------ OK

CLM tag used for the baseline comparisons: ctsm1.0.dev001


Answer changes
--------------

Changes answers relative to baseline: clm5_0 BGC configurations with FUN and clm5_0 with BGC for new 1850 ndep file

  Summarize any changes to answers, i.e.,
    - what code configurations: All clm5_0 BGC due to NFIX fields, and clm5_0 1850 BGC due to new ndep file
    - what platforms/compilers: All
    - nature of change: similar climate

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): None

Pull Requests that document the changes (include PR ids):
(https://github.com/ESCOMP/ctsm/pull)

  #437 -- ChangeLog template
  #432 -- nfix
  #331 -- _MAX fields on mksurfdata_map

===============================================================
===============================================================
Tag name:  ctsm1.0.dev001
Originator(s):  sacks (Bill Sacks)
Date: Fri Jun 22 07:31:43 MDT 2018
One-line Summary: Begin separating SoilHydrology flux calculations

Note the new tag naming: Starting with this tag, we are naming tags
"ctsm..." rather than "clm...". We are starting with ctsm version 1,
which for now is nearly the same as clm version 5. We are moving to this
new tag naming now because:

(1) The changes in this tag represent the first step towards
    implementing the CTSM vision (separating the biogeophysics flux
    calculations from state updates, making it easier to plug in
    alternative parameterizations, etc.).

(2) This tag changes answers relative to the CLM5 release. (We expect
    the climate to be the same, but we haven't tested this carefully
    yet.)

Purpose of changes
------------------

First steps toward separating various flux calculations in the soil
hydrology code. The focus here is on saturated surface runoff and
infiltration excess runoff. The changes here separate flux calculations
from state updates and extract various calculations into their own
subroutines to facilitate swapping in alternative parameterizations.

Most of the changes here are refactorings that are either bit-for-bit or
just introduce roundoff-level differences. However, there are also a few
larger answer changes, as described below.

These are the greater-than-roundoff-level answer changes:

(A1) Use full qflx_surf in BGC code. Previously, the subroutines ch4 and
     SoilBiogeochemNLeaching had been using a flux that excluded surface
     water runoff (qflx_h2osfc_surf). That was deemed to be incorrect
     (by Dave Lawrence and others), so these BGC subroutines have been
     changed to use the full surface runoff (saturated excess runoff +
     infiltration excess runoff + h2osfc runoff).

     Configurations affected: BGC compsets

     Magnitude of change: Larger than roundoff; expected to be same
     climate, but not investigated carefully

(A2) VIC: Don't ever use the TOPModel formulation for SurfaceRunoff

     The code was using the TOPModel-based formulation for SurfaceRunoff
     if frost_table > zwt_perched. Sean Swenson felt this shouldn't be
     done, and refactoring will be easier if VIC always uses the
     vic-looking formulation, so I'm stopping applying this formulation
     when using VIC.

     Configurations affected: VIC compsets

     Magnitude of change: Larger than roundoff; not investigated carefully

(A3) VIC: Remove infiltration excess runoff

     Martyn Clark reviewed the VIC implementation, and felt that the
     current implementation of infiltration excess runoff is
     inconsistent with the standard VIC implementation. It appears that
     what was being called VIC's infiltration excess runoff was actually
     just an attempt to give a better numerical approximation to the
     solution for saturated surface excess runoff. So deleting this
     leaves only a first-order approximation to VIC's saturated surface
     excess runoff.

     Eventually we may want to put in place a more accurate solution for
     VIC's saturated surface excess runoff. But Martyn's feeling is that
     this can come in with other changes we want to make regarding
     numerical solutions in CTSM.

     Configurations affected: VIC compsets

     Magnitude of change: Larger than roundoff; expected to be same
     climate, but not investigated carefully

(A4) Change in QOVER diagnostic field: now includes QH2OSFC.

These are the major refactorings (either bit-for-bit or just
roundoff-level differences):

(R1) Extract surface runoff to its own module, and other modularization
     related to what used to be subroutine SurfaceRunoff: extract a
     subroutine for each fsat method, move urban surface runoff code
     into different routines.

(R2) Extract infiltration excess runoff to its own module, and other
     modularization related to what used to be subroutine Infiltration.

NOTE: For a detailed breakdown of changes, including documentation of
which changed changed answers, see the file ChangeLog_branch which was
deleted from this branch shortly before it was merged to master.

Bugs fixed or introduced
------------------------

Issues fixed (include CTSM Issue #):
- Fixes #424 (decStart testmod is missing an `--append` in an xmlchange command)


Notes of particular relevance for users
---------------------------------------

Caveats for users (e.g., need to interpolate initial conditions):

Changes to CLM's user interface (e.g., new/renamed XML or namelist variables):

Changes made to namelist defaults (e.g., changed parameter values):

Changes to the datasets (e.g., parameter, surface or initial files):

Substantial timing or memory changes:

Notes of particular relevance for developers: (including Code reviews and testing)
---------------------------------------------
NOTE: Be sure to review the steps in .CLMTrunkChecklist as well as the coding style in the Developers Guide

Caveats for developers (e.g., code that is duplicated that requires double maintenance):

Changes to tests or testing:
- Shortened a 25-month f19 test to 13-months
  (SMS_Lm13.f19_g17.I2000Clm50BgcCrop.cheyenne_intel.clm-cropMonthOutput):
  This test took a long time to run, and we already have long tests of
  this configuration at coarse-resolution. I suggested removing this
  test entirely, but Erik Kluzek wanted to maintain a shortened version
  of it. Erik's comments were:

     How about either flip it to f45 (because Rosie is using that
     resolution for science) -- or leave it at f19 and have it run for 9
     months? The 25 months was to take it just past the 2-year spinup
     time. From spunup initial conditions 9-months pretty much does a
     full harvest cycle. f19 and f09 are the main configurations for
     science and it would be good to have something longer than just
     really short tests.

  I decided on Lm13, because this still completes in significantly less
  than 2-hours, and if we're running for 9 months anyway, it seems
  valuable to finish out the year and run a bit into the next year,
  since some crop stuff triggers at the end of the year.

Code reviewed by: Various code reviews done last Fall, when these
changes were first implemented.

CLM testing:

 [PASS means all tests PASS and OK means tests PASS other than expected fails.]

  build-namelist tests:

    cheyenne - not run

  unit-tests (components/clm/src):

    cheyenne - PASS

  tools-tests (components/clm/test/tools):

    cheyenne - not run

  PTCLM testing (components/clm/tools/shared/PTCLM/test):

     cheyenne - not run

  regular tests (aux_clm):

    cheyenne_intel ---- OK
    cheyenne_gnu ------ OK
    hobart_nag -------- OK
    hobart_pgi -------- OK
    hobart_intel ------ OK

    OK means tests pass, answers change as expected.

CLM tag used for the baseline comparisons: clm5.0.dev013


Answer changes
--------------

Changes answers relative to baseline: YES

  If a tag changes answers relative to baseline comparison the
  following should be filled in (otherwise remove this section):

  Summarize any changes to answers, i.e.,
    - what code configurations: Essentially all (except CLM4)
    - what platforms/compilers: All
    - nature of change (roundoff; larger than roundoff/same climate; new climate): 

    Roundoff-level changes for nearly all configurations (except CLM4).

    Greater-than-roundoff-level changes for the following
    configurations:
    - BGC: see (A1) note above (expected to be same climate, but not
      investigated carefully)
    - VIC: see (A2) and (A3) notes above (magnitude of change not
      investigated carefully)
    - QOVER diagnostic field: see (A4) note above

   If bitwise differences were observed, how did you show they were no worse
   than roundoff? N/A

   If this tag changes climate describe the run(s) done to evaluate the new
   climate (put details of the simulations in the experiment database)
       - casename: N/A

   URL for LMWG diagnostics output used to validate new climate: N/A
	

Detailed list of changes
------------------------

List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): none

Pull Requests that document the changes (include PR ids):
- https://github.com/ESCOMP/ctsm/pull/244
- https://github.com/ESCOMP/ctsm/pull/190
- Other PRs that existed on the old NCAR/clm-ctsm repository (which has
  been deleted), which were not migrated to the new repository

===============================================================
